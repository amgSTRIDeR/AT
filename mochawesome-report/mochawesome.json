{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-30T13:20:39.322Z",
    "end": "2023-09-30T13:20:39.348Z",
    "duration": 26,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9e5a99a2-5fb3-4fee-8f44-f9547d7d0375",
      "title": "",
      "fullFile": "C:\\Users\\STRIDeR\\Desktop\\AT\\at\\test\\isNumberEven.spec.js",
      "file": "\\test\\isNumberEven.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ac0070be-3beb-4fef-b667-c69f794f8a13",
          "title": "isNumberEven positive tests",
          "fullFile": "C:\\Users\\STRIDeR\\Desktop\\AT\\at\\test\\isNumberEven.spec.js",
          "file": "\\test\\isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven positive tests\"",
              "fullTitle": "isNumberEven positive tests \"before each\" hook in \"isNumberEven positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "0b76d6c9-ea99-4994-9c47-d8e4f3e526f4",
              "parentUUID": "ac0070be-3beb-4fef-b667-c69f794f8a13",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven positive tests\"",
              "fullTitle": "isNumberEven positive tests \"after each\" hook in \"isNumberEven positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "a1a6251c-5663-47ba-be8e-b9fd3f86bc3d",
              "parentUUID": "ac0070be-3beb-4fef-b667-c69f794f8a13",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Should return true when provided with an even number",
              "fullTitle": "isNumberEven positive tests Should return true when provided with an even number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(4);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "9a60fd7d-a8d5-43f2-90f7-2bad1522cccd",
              "parentUUID": "ac0070be-3beb-4fef-b667-c69f794f8a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return false when provided with an odd number",
              "fullTitle": "isNumberEven positive tests Should return false when provided with an odd number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(3);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "6613fc00-2497-42a7-a160-18fb5a8327d8",
              "parentUUID": "ac0070be-3beb-4fef-b667-c69f794f8a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return false when provided with an odd number",
              "fullTitle": "isNumberEven positive tests Should return false when provided with an odd number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(-21);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "aef75e35-e495-45bb-8c65-64a574bcb855",
              "parentUUID": "ac0070be-3beb-4fef-b667-c69f794f8a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a string",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a string",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw(('[4] is not of type \"Number\" it is of type \"string\"'));",
              "err": {},
              "uuid": "a166c84a-acf4-4b0c-a87c-645ec58405ff",
              "parentUUID": "ac0070be-3beb-4fef-b667-c69f794f8a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a object",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven({});\n}).to.throw(('[[object Object]] is not of type \"Number\" it is of type \"object\"'));",
              "err": {},
              "uuid": "10e956ec-9f47-4e3e-ae17-54cb36ea3034",
              "parentUUID": "ac0070be-3beb-4fef-b667-c69f794f8a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a null",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven(null);\n}).to.throw(('[null] is not of type \"Number\" it is of type \"object\"'));",
              "err": {},
              "uuid": "c370d9e9-373d-46c4-845c-0c03f4fd7250",
              "parentUUID": "ac0070be-3beb-4fef-b667-c69f794f8a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a undefined",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a undefined",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven(undefined);\n}).to.throw('[undefined] is not of type \"Number\" it is of type \"undefined\"');",
              "err": {},
              "uuid": "b06726f6-6e78-4139-b5e7-d65b6cba3b06",
              "parentUUID": "ac0070be-3beb-4fef-b667-c69f794f8a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a boolean",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven(true);\n}).to.throw('[true] is not of type \"Number\" it is of type \"boolean\"');",
              "err": {},
              "uuid": "397523f1-a105-48f3-a224-6e4bede24b46",
              "parentUUID": "ac0070be-3beb-4fef-b667-c69f794f8a13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a60fd7d-a8d5-43f2-90f7-2bad1522cccd",
            "6613fc00-2497-42a7-a160-18fb5a8327d8",
            "aef75e35-e495-45bb-8c65-64a574bcb855",
            "a166c84a-acf4-4b0c-a87c-645ec58405ff",
            "10e956ec-9f47-4e3e-ae17-54cb36ea3034",
            "c370d9e9-373d-46c4-845c-0c03f4fd7250",
            "b06726f6-6e78-4139-b5e7-d65b6cba3b06",
            "397523f1-a105-48f3-a224-6e4bede24b46"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}