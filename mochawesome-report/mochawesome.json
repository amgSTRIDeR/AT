{
  "stats": {
    "suites": 2,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-30T14:33:19.588Z",
    "end": "2023-09-30T14:33:19.610Z",
    "duration": 22,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7d8e5d48-0495-474e-be99-a08b423ed0bb",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c5ce1ce-6562-49ec-ab25-540f9072cac6",
          "title": "isNumberEven positive tests",
          "fullFile": "C:\\Users\\STRIDeR\\Desktop\\AT\\at\\test\\getEvenNumbersFromArray.spec.js",
          "file": "\\test\\getEvenNumbersFromArray.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven positive tests\"",
              "fullTitle": "isNumberEven positive tests \"before each\" hook in \"isNumberEven positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "338ead2c-8f0a-4d36-8ab0-eaa764ef8cfd",
              "parentUUID": "0c5ce1ce-6562-49ec-ab25-540f9072cac6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven positive tests\"",
              "fullTitle": "isNumberEven positive tests \"after each\" hook in \"isNumberEven positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "073bf9fc-2263-4a5c-a9a5-859f32a1fff9",
              "parentUUID": "0c5ce1ce-6562-49ec-ab25-540f9072cac6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Should return even numbers from array of numbers",
              "fullTitle": "isNumberEven positive tests Should return even numbers from array of numbers",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.getEvenNumbersFromArray([1, 0, 55, 6, -200, 3]);\nexpect(validationResults).to.be.deep.equal([0, 6, -200]);",
              "err": {},
              "uuid": "798dbabf-037e-42b6-b3c9-96146c23952b",
              "parentUUID": "0c5ce1ce-6562-49ec-ab25-540f9072cac6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array from empty array",
              "fullTitle": "isNumberEven positive tests Should return empty array from empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.getEvenNumbersFromArray([]);\nexpect(validationResults).to.be.deep.equal([]);",
              "err": {},
              "uuid": "f4f02928-cc22-4e35-83b9-1311a9470173",
              "parentUUID": "0c5ce1ce-6562-49ec-ab25-540f9072cac6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided an array of numbers and strings",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided an array of numbers and strings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.getEvenNumbersFromArray([1, 0, 55, '6', -200, '3']);\n}).to.throw('[1,0,55,6,-200,3] is not an array of \"Numbers\"');",
              "err": {},
              "uuid": "03dd0499-fffa-4345-b76c-6e71f8daac59",
              "parentUUID": "0c5ce1ce-6562-49ec-ab25-540f9072cac6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a number",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.getEvenNumbersFromArray(99);\n}).to.throw('[99] is not an array of \"Numbers\"');",
              "err": {},
              "uuid": "84305c4c-172d-44dc-932b-67e8b4771285",
              "parentUUID": "0c5ce1ce-6562-49ec-ab25-540f9072cac6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a string",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.getEvenNumbersFromArray('some string');\n}).to.throw('[some string] is not an array of \"Numbers\"');",
              "err": {},
              "uuid": "e17cd555-fe2c-4668-aff0-0c8a621bf1de",
              "parentUUID": "0c5ce1ce-6562-49ec-ab25-540f9072cac6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "798dbabf-037e-42b6-b3c9-96146c23952b",
            "f4f02928-cc22-4e35-83b9-1311a9470173",
            "03dd0499-fffa-4345-b76c-6e71f8daac59",
            "84305c4c-172d-44dc-932b-67e8b4771285",
            "e17cd555-fe2c-4668-aff0-0c8a621bf1de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "984b505b-3413-4bcb-9138-2838dc3caff7",
          "title": "isNumberEven positive tests",
          "fullFile": "C:\\Users\\STRIDeR\\Desktop\\AT\\at\\test\\isNumberEven.spec.js",
          "file": "\\test\\isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven positive tests\"",
              "fullTitle": "isNumberEven positive tests \"before each\" hook in \"isNumberEven positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "42c1690d-3deb-4b4f-b839-532d55c11727",
              "parentUUID": "984b505b-3413-4bcb-9138-2838dc3caff7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven positive tests\"",
              "fullTitle": "isNumberEven positive tests \"after each\" hook in \"isNumberEven positive tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "7fc3dbaf-72fe-40bb-a2cf-ed59e6d70e58",
              "parentUUID": "984b505b-3413-4bcb-9138-2838dc3caff7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Should return true when provided with an even number",
              "fullTitle": "isNumberEven positive tests Should return true when provided with an even number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(4);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "f0203f3b-89d6-45cd-9a4f-a37a6054e9d8",
              "parentUUID": "984b505b-3413-4bcb-9138-2838dc3caff7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return false when provided with an odd number",
              "fullTitle": "isNumberEven positive tests Should return false when provided with an odd number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(3);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "856172e8-09ca-41c1-b260-0d18edc0d662",
              "parentUUID": "984b505b-3413-4bcb-9138-2838dc3caff7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return false when provided with an odd number",
              "fullTitle": "isNumberEven positive tests Should return false when provided with an odd number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(-21);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "52931e6c-54b9-4614-a891-be9d190dca9f",
              "parentUUID": "984b505b-3413-4bcb-9138-2838dc3caff7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a string",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw(('[4] is not of type \"Number\" it is of type \"string\"'));",
              "err": {},
              "uuid": "36210a4a-0287-4061-a1b8-b743edbdc063",
              "parentUUID": "984b505b-3413-4bcb-9138-2838dc3caff7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a object",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven({});\n}).to.throw(('[[object Object]] is not of type \"Number\" it is of type \"object\"'));",
              "err": {},
              "uuid": "e1111eeb-24e0-4010-95d5-92f20429fa5e",
              "parentUUID": "984b505b-3413-4bcb-9138-2838dc3caff7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a null",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a null",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven(null);\n}).to.throw(('[null] is not of type \"Number\" it is of type \"object\"'));",
              "err": {},
              "uuid": "13680f61-8157-4e03-9807-e193a90bd48f",
              "parentUUID": "984b505b-3413-4bcb-9138-2838dc3caff7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a undefined",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a undefined",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven(undefined);\n}).to.throw('[undefined] is not of type \"Number\" it is of type \"undefined\"');",
              "err": {},
              "uuid": "164dd64f-0b42-4a6f-b9dc-9306d993081b",
              "parentUUID": "984b505b-3413-4bcb-9138-2838dc3caff7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error when provided a boolean",
              "fullTitle": "isNumberEven positive tests Should throw an error when provided a boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven(true);\n}).to.throw('[true] is not of type \"Number\" it is of type \"boolean\"');",
              "err": {},
              "uuid": "9c924329-4db3-4898-8fff-e28cf90291ff",
              "parentUUID": "984b505b-3413-4bcb-9138-2838dc3caff7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0203f3b-89d6-45cd-9a4f-a37a6054e9d8",
            "856172e8-09ca-41c1-b260-0d18edc0d662",
            "52931e6c-54b9-4614-a891-be9d190dca9f",
            "36210a4a-0287-4061-a1b8-b743edbdc063",
            "e1111eeb-24e0-4010-95d5-92f20429fa5e",
            "13680f61-8157-4e03-9807-e193a90bd48f",
            "164dd64f-0b42-4a6f-b9dc-9306d993081b",
            "9c924329-4db3-4898-8fff-e28cf90291ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}